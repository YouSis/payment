<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wfj.pay.mapper.PayPartnerAccountMapper">
    <resultMap type="PayPartnerAccountPO" id="payPartnerAccount">
        <id property="id" column="ID" />
		<result property="partner" column="PARTNER" />
		<result property="encryptKey" column="ENCRYPT_KEY" />
		<result property="keyPath" column="KEY_PATH" />
		<result property="sellerEmail" column="SELLER_EMAIL" />
		<result property="createDate" column="CREATE_DATE" />
		<result property="feeCostRate" column="FEE_COST_RATE" />
		<result property="payMediumCode" column="PAY_MEDIUM_CODE" />
		<result property="payType" column="PAY_TYPE" />
		<result property="payMediumCodeCredit" column="PAY_MEDIUM_CODE_CREDIT" />
		<result property="branchId" column="BRANCH_ID" />
		<result property="payMediumCodeCredit" column="pay_medium_code_credit" />
		<result property="appid" column="APPID" />
		<result property="storeId" column="STORE_ID" />
		<result property="storeName" column="STORE_NAME" />
		<result property="publicKey" column="PUBLIC_KEY" />
		<result property="privateKey" column="PRIVATE_KEY" />
		<result property="payTypeCode" column="VALUE"/>
    </resultMap>

    <insert id="insert" parameterType="PayPartnerAccountPO">
		insert
		into
		PAY_PARTNER_ACCOUNT(
		ID,
		PARTNER,		
		ENCRYPT_KEY,
		KEY_PATH,		
		SELLER_EMAIL,		
		CREATE_DATE,
		PAY_MEDIUM_CODE,
		PAY_TYPE,
		BRANCH_ID,
		PAY_MEDIUM_CODE_CREDIT,
		APPID,
		STORE_ID,
		STORE_NAME,
		PUBLIC_KEY,
		PRIVATE_KEY
		)
		values(
		S_PAY_PARTNER_ACCOUNT.NEXTVAL,
		#{partner, jdbcType=VARCHAR},		
		#{encryptKey, jdbcType=VARCHAR},
		#{keyPath, jdbcType=VARCHAR},		
		#{sellerEmail, jdbcType=VARCHAR},		
		#{createDate, jdbcType=DATE},
		#{payMediumCode,jdbcType=VARCHAR},
		#{payType,jdbcType=VARCHAR},	
		#{branchId,jdbcType=VARCHAR},	
		#{payMediumCodeCredit,jdbcType=VARCHAR},	
		#{appid,jdbcType=VARCHAR},
		#{storeId,jdbcType=VARCHAR},
		#{storeName,jdbcType=VARCHAR},
		#{publicKey,jdbcType=VARCHAR},
		#{privateKey,jdbcType=VARCHAR}		
		)
	</insert>


    <update id="update" parameterType="PayPartnerAccountPO">
		update PAY_PARTNER_ACCOUNT set
		PARTNER=#{partner,jdbcType=VARCHAR},
		ENCRYPT_KEY=#{encryptKey,jdbcType=VARCHAR},
		KEY_PATH=#{keyPath,jdbcType=VARCHAR},
		SELLER_EMAIL=#{sellerEmail,jdbcType=VARCHAR},
		CREATE_DATE=#{createDate,jdbcType=DATE},
		PAY_MEDIUM_CODE=#{payMediumCode,jdbcType=VARCHAR},
		PAY_TYPE=#{payType,jdbcType=VARCHAR},
		BRANCH_ID=#{branchId,jdbcType=VARCHAR},
		PAY_MEDIUM_CODE_CREDIT=#{payMediumCodeCredit,jdbcType=VARCHAR},
		APPID=#{appid,jdbcType=VARCHAR},
		STORE_ID=#{storeId,jdbcType=VARCHAR},
		STORE_NAME=#{storeName,jdbcType=VARCHAR},
		PUBLIC_KEY=#{publicKey,jdbcType=VARCHAR},
		PRIVATE_KEY=#{privateKey,jdbcType=VARCHAR}	
		where
		ID=#{id}
	</update>

    <select id="selectById" parameterType="long" resultMap="payPartnerAccount">
        SELECT *
        FROM PAY_PARTNER_ACCOUNT
        <where>
            ID = #{id}
        </where>
    </select>
    
    <select id="findAllPage" parameterType="map" resultMap="payPartnerAccount">
		SELECT A.* FROM 
		(SELECT PA.*, D.VALUE FROM PAY_PARTNER_ACCOUNT PA, PAY_DICTIONARY D 
		WHERE PA.PAY_TYPE=D.NAME AND (D.THIRD_CHANNEL_FLAG='1' OR D.ONLINE_BANK_FLAG='1')) A
		<where>
			<if test="payType !=null">
				AND PAY_TYPE =#{payType,jdbcType=VARCHAR}
			</if>
			<if test="partner !=null">
			    AND PARTNER =#{partner,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY ID DESC
	</select>
</mapper>
